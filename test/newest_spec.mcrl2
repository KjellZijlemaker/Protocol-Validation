sort TComm = struct detectedU | detectedD | undetectedU | undetectedD | unpressedU | unpressedD | pressedU | pressedD;
sort D = struct up | down | left | right;

act
	s1, r1, c1, r2, s2, c2: TComm;
	move: D;
	stop, detectU, detectD, pressU, pressD;
	brakeON, brakeOFF;

proc
	%M1 = (r2(pressedU).r1(undetectedU)).brakeOFF.move(up).M1 + (r2(pressedD).r1(undetectedD)).brakeOFF.move(down).M1 + 
	%									(r1(detectedU) + r2(unpressedU) + r1(detectedD) + r2(unpressedD)).brakeON.stop.M1;

	%M1 = r2(pressedU).(r1(undetectedU).brakeOFF.move(up) + (r1(detectedU) + r2(unpressedU)).brakeON.stop).M1 +
	%		r2(pressedD).(r1(undetectedD).brakeOFF.move(down) + r2(pressedD) + (r1(detectedD) + r2(unpressedD)).brakeON.stop).M1;

	M = r2(pressedU).M1 + r2(pressedD).M + (r2(unpressedU)+r1(detectedU)).M;
	M1 = (r2(pressedU)+r1(undetectedU)).M2 + (r2(pressedD)+r2(unpressedU)+r1(detectedU)).M;
	M2 = brakeOFF.move(up).M2 + (r2(pressedD)+r2(unpressedU)+r1(detectedU)).M;
	
	%S = (s1(undetectedU)+s1(undetectedD)).S +
	%									(detectU.s1(detectedU) + detectD.s1(detectedD)).S;

	S = (s1(undetectedU)+s1(undetectedD)).S + detectU.s1(detectedU).S1 + detectD.s1(detectedD).S2;
	S1 = detectU.s1(detectedU).S1 + s1(undetectedU).S;
	S2 = detectD.s1(detectedD).S2 + s1(undetectedD).S;
	
	%B = (s2(unpressedU)+s2(unpressedD)).B +
	%									pressU.B1(pressedU) +
	%									pressD.B1(pressedD);
	%B1(p:TComm) = s2(p).B;

	B = (s2(unpressedU)+s2(unpressedD)).B + pressU.s2(pressedU).B1 + pressD.s2(pressedD).B2;
	B1 = pressU.s2(pressedU).B1 + s2(unpressedU).B;
	B2 = pressD.s2(pressedD).B2 + s2(unpressedD).B;

init
	allow({ c1, c2, move, stop, detectU, detectD, pressU, pressD, brakeON, brakeOFF},
		comm(
			{
				s1|r1 -> c1,
				s2|r2 -> c2
			},
			M || S || B
		)
	);